Terminaux inutilisés dans la grammaire

   STRING
   UMOINS


État 27 conflits: 1 réduction/réduction
État 63 conflits: 3 réduction/réduction
État 85 conflits: 3 réduction/réduction


Grammaire

    0 $accept: axiom $end

    1 axiom: list

    2 affect: TYPE ID '=' NUMBER
    3       | TYPE ID '=' '-' NUMBER
    4       | TYPE ID '=' expr
    5       | ID '=' expr

    6 expr: expr '+' expr
    7     | expr '-' expr
    8     | expr '*' expr
    9     | expr '/' expr
   10     | '(' expr ')'
   11     | increment
   12     | ID
   13     | '-' NUMBER
   14     | NUMBER

   15 increment: ID "++"
   16          | "++" ID
   17          | ID "--"
   18          | "--" ID

   19 tag: %empty

   20 tagoto: %empty

   21 list: "int" "main" '(' ')' '{' list '}'
   22     | list ';' tag statement
   23     | list ';' affect
   24     | statement
   25     | affect
   26     | %empty

   27 statement: IF '(' condition ')' '{' tag list '}'
   28          | IF '(' condition ')' '{' tag list '}' ELSE '{' tagoto list '}'
   29          | WHILE tag '(' condition ')' '{' tag list '}'
   30          | FOR '(' affect ';' tag condition ';' expr ')' '{' tag list '}'

   31 condition: condition OR tag condition
   32          | condition AND tag condition
   33          | NOT condition
   34          | '(' condition ')'
   35          | relop
   36          | ID

   37 relop: expr '>' expr
   38      | expr '<' expr
   39      | expr "!=" expr
   40      | expr ">=" expr
   41      | expr "<=" expr
   42      | expr "==" expr


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 10 21 27 28 29 30 34
')' (41) 10 21 27 28 29 30 34
'*' (42) 8
'+' (43) 6
'-' (45) 3 7 13
'/' (47) 9
';' (59) 22 23 30
'<' (60) 38
'=' (61) 2 3 4 5
'>' (62) 37
'{' (123) 21 27 28 29 30
'}' (125) 21 27 28 29 30
error (256)
NUMBER (258) 2 3 13 14
ID (259) 2 3 4 5 12 15 16 17 18 36
NOT (260) 33
OR (261) 31
AND (262) 32
IF (263) 27 28
ELSE (264) 28
WHILE (265) 29
FOR (266) 30
STRING (267)
TYPE (268) 2 3 4
">=" (269) 40
"<=" (270) 41
"==" (271) 42
"!=" (272) 39
"++" (273) 15 16
"--" (274) 17 18
UMOINS (275)
"int" (276) 21
"main" (277) 21


Non-terminaux, suivis des règles où ils apparaissent

$accept (35)
    à gauche: 0
axiom (36)
    à gauche: 1, à droite: 0
affect (37)
    à gauche: 2 3 4 5, à droite: 23 25 30
expr (38)
    à gauche: 6 7 8 9 10 11 12 13 14, à droite: 4 5 6 7 8 9 10 30
    37 38 39 40 41 42
increment (39)
    à gauche: 15 16 17 18, à droite: 11
tag (40)
    à gauche: 19, à droite: 22 27 28 29 30 31 32
tagoto (41)
    à gauche: 20, à droite: 28
list (42)
    à gauche: 21 22 23 24 25 26, à droite: 1 21 22 23 27 28 29 30
statement (43)
    à gauche: 27 28 29 30, à droite: 22 24
condition (44)
    à gauche: 31 32 33 34 35 36, à droite: 27 28 29 30 31 32 33 34
relop (45)
    à gauche: 37 38 39 40 41 42, à droite: 35


État 0

    0 $accept: . axiom $end

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    axiom      aller à l'état 7
    affect     aller à l'état 8
    list       aller à l'état 9
    statement  aller à l'état 10


État 1

    5 affect: ID . '=' expr

    '='  décalage et aller à l'état 11


État 2

   27 statement: IF . '(' condition ')' '{' tag list '}'
   28          | IF . '(' condition ')' '{' tag list '}' ELSE '{' tagoto list '}'

    '('  décalage et aller à l'état 12


État 3

   29 statement: WHILE . tag '(' condition ')' '{' tag list '}'

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 13


État 4

   30 statement: FOR . '(' affect ';' tag condition ';' expr ')' '{' tag list '}'

    '('  décalage et aller à l'état 14


État 5

    2 affect: TYPE . ID '=' NUMBER
    3       | TYPE . ID '=' '-' NUMBER
    4       | TYPE . ID '=' expr

    ID  décalage et aller à l'état 15


État 6

   21 list: "int" . "main" '(' ')' '{' list '}'

    "main"  décalage et aller à l'état 16


État 7

    0 $accept: axiom . $end

    $end  décalage et aller à l'état 17


État 8

   25 list: affect .

    $défaut  réduction par utilisation de la règle 25 (list)


État 9

    1 axiom: list .
   22 list: list . ';' tag statement
   23     | list . ';' affect

    ';'  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 1 (axiom)


État 10

   24 list: statement .

    $défaut  réduction par utilisation de la règle 24 (list)


État 11

    5 affect: ID '=' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 25
    increment  aller à l'état 26


État 12

   27 statement: IF '(' . condition ')' '{' tag list '}'
   28          | IF '(' . condition ')' '{' tag list '}' ELSE '{' tagoto list '}'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 31
    relop      aller à l'état 32


État 13

   29 statement: WHILE tag . '(' condition ')' '{' tag list '}'

    '('  décalage et aller à l'état 33


État 14

   30 statement: FOR '(' . affect ';' tag condition ';' expr ')' '{' tag list '}'

    ID    décalage et aller à l'état 1
    TYPE  décalage et aller à l'état 5

    affect  aller à l'état 34


État 15

    2 affect: TYPE ID . '=' NUMBER
    3       | TYPE ID . '=' '-' NUMBER
    4       | TYPE ID . '=' expr

    '='  décalage et aller à l'état 35


État 16

   21 list: "int" "main" . '(' ')' '{' list '}'

    '('  décalage et aller à l'état 36


État 17

    0 $accept: axiom $end .

    $défaut  accepter


État 18

   22 list: list ';' . tag statement
   23     | list ';' . affect

    ID    décalage et aller à l'état 1
    TYPE  décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 19 (tag)

    affect  aller à l'état 37
    tag     aller à l'état 38


État 19

   14 expr: NUMBER .

    $défaut  réduction par utilisation de la règle 14 (expr)


État 20

   12 expr: ID .
   15 increment: ID . "++"
   17          | ID . "--"

    "++"  décalage et aller à l'état 39
    "--"  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 12 (expr)


État 21

   13 expr: '-' . NUMBER

    NUMBER  décalage et aller à l'état 41


État 22

   16 increment: "++" . ID

    ID  décalage et aller à l'état 42


État 23

   18 increment: "--" . ID

    ID  décalage et aller à l'état 43


État 24

   10 expr: '(' . expr ')'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 44
    increment  aller à l'état 26


État 25

    5 affect: ID '=' expr .
    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 5 (affect)


État 26

   11 expr: increment .

    $défaut  réduction par utilisation de la règle 11 (expr)


État 27

   12 expr: ID .
   15 increment: ID . "++"
   17          | ID . "--"
   36 condition: ID .

    "++"  décalage et aller à l'état 39
    "--"  décalage et aller à l'état 40

    OR        réduction par utilisation de la règle 36 (condition)
    AND       réduction par utilisation de la règle 36 (condition)
    ')'       réduction par utilisation de la règle 12 (expr)
    ')'       [réduction par utilisation de la règle 36 (condition)]
    ';'       réduction par utilisation de la règle 36 (condition)
    $défaut  réduction par utilisation de la règle 12 (expr)


État 28

   33 condition: NOT . condition

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 49
    relop      aller à l'état 32


État 29

   10 expr: '(' . expr ')'
   34 condition: '(' . condition ')'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 50
    increment  aller à l'état 26
    condition  aller à l'état 51
    relop      aller à l'état 32


État 30

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   37 relop: expr . '>' expr
   38      | expr . '<' expr
   39      | expr . "!=" expr
   40      | expr . ">=" expr
   41      | expr . "<=" expr
   42      | expr . "==" expr

    '>'   décalage et aller à l'état 52
    '<'   décalage et aller à l'état 53
    ">="  décalage et aller à l'état 54
    "<="  décalage et aller à l'état 55
    "=="  décalage et aller à l'état 56
    "!="  décalage et aller à l'état 57
    '+'   décalage et aller à l'état 45
    '-'   décalage et aller à l'état 46
    '*'   décalage et aller à l'état 47
    '/'   décalage et aller à l'état 48


État 31

   27 statement: IF '(' condition . ')' '{' tag list '}'
   28          | IF '(' condition . ')' '{' tag list '}' ELSE '{' tagoto list '}'
   31 condition: condition . OR tag condition
   32          | condition . AND tag condition

    OR   décalage et aller à l'état 58
    AND  décalage et aller à l'état 59
    ')'  décalage et aller à l'état 60


État 32

   35 condition: relop .

    $défaut  réduction par utilisation de la règle 35 (condition)


État 33

   29 statement: WHILE tag '(' . condition ')' '{' tag list '}'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 61
    relop      aller à l'état 32


État 34

   30 statement: FOR '(' affect . ';' tag condition ';' expr ')' '{' tag list '}'

    ';'  décalage et aller à l'état 62


État 35

    2 affect: TYPE ID '=' . NUMBER
    3       | TYPE ID '=' . '-' NUMBER
    4       | TYPE ID '=' . expr

    NUMBER  décalage et aller à l'état 63
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 64
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 65
    increment  aller à l'état 26


État 36

   21 list: "int" "main" '(' . ')' '{' list '}'

    ')'  décalage et aller à l'état 66


État 37

   23 list: list ';' affect .

    $défaut  réduction par utilisation de la règle 23 (list)


État 38

   22 list: list ';' tag . statement

    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4

    statement  aller à l'état 67


État 39

   15 increment: ID "++" .

    $défaut  réduction par utilisation de la règle 15 (increment)


État 40

   17 increment: ID "--" .

    $défaut  réduction par utilisation de la règle 17 (increment)


État 41

   13 expr: '-' NUMBER .

    $défaut  réduction par utilisation de la règle 13 (expr)


État 42

   16 increment: "++" ID .

    $défaut  réduction par utilisation de la règle 16 (increment)


État 43

   18 increment: "--" ID .

    $défaut  réduction par utilisation de la règle 18 (increment)


État 44

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   10     | '(' expr . ')'

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48
    ')'  décalage et aller à l'état 68


État 45

    6 expr: expr '+' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 69
    increment  aller à l'état 26


État 46

    7 expr: expr '-' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 70
    increment  aller à l'état 26


État 47

    8 expr: expr '*' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 71
    increment  aller à l'état 26


État 48

    9 expr: expr '/' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 72
    increment  aller à l'état 26


État 49

   31 condition: condition . OR tag condition
   32          | condition . AND tag condition
   33          | NOT condition .

    $défaut  réduction par utilisation de la règle 33 (condition)


État 50

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   10     | '(' expr . ')'
   37 relop: expr . '>' expr
   38      | expr . '<' expr
   39      | expr . "!=" expr
   40      | expr . ">=" expr
   41      | expr . "<=" expr
   42      | expr . "==" expr

    '>'   décalage et aller à l'état 52
    '<'   décalage et aller à l'état 53
    ">="  décalage et aller à l'état 54
    "<="  décalage et aller à l'état 55
    "=="  décalage et aller à l'état 56
    "!="  décalage et aller à l'état 57
    '+'   décalage et aller à l'état 45
    '-'   décalage et aller à l'état 46
    '*'   décalage et aller à l'état 47
    '/'   décalage et aller à l'état 48
    ')'   décalage et aller à l'état 68


État 51

   31 condition: condition . OR tag condition
   32          | condition . AND tag condition
   34          | '(' condition . ')'

    OR   décalage et aller à l'état 58
    AND  décalage et aller à l'état 59
    ')'  décalage et aller à l'état 73


État 52

   37 relop: expr '>' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 74
    increment  aller à l'état 26


État 53

   38 relop: expr '<' . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 75
    increment  aller à l'état 26


État 54

   40 relop: expr ">=" . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 76
    increment  aller à l'état 26


État 55

   41 relop: expr "<=" . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 77
    increment  aller à l'état 26


État 56

   42 relop: expr "==" . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 78
    increment  aller à l'état 26


État 57

   39 relop: expr "!=" . expr

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 79
    increment  aller à l'état 26


État 58

   31 condition: condition OR . tag condition

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 80


État 59

   32 condition: condition AND . tag condition

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 81


État 60

   27 statement: IF '(' condition ')' . '{' tag list '}'
   28          | IF '(' condition ')' . '{' tag list '}' ELSE '{' tagoto list '}'

    '{'  décalage et aller à l'état 82


État 61

   29 statement: WHILE tag '(' condition . ')' '{' tag list '}'
   31 condition: condition . OR tag condition
   32          | condition . AND tag condition

    OR   décalage et aller à l'état 58
    AND  décalage et aller à l'état 59
    ')'  décalage et aller à l'état 83


État 62

   30 statement: FOR '(' affect ';' . tag condition ';' expr ')' '{' tag list '}'

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 84


État 63

    2 affect: TYPE ID '=' NUMBER .
   14 expr: NUMBER .

    $end      réduction par utilisation de la règle 2 (affect)
    $end      [réduction par utilisation de la règle 14 (expr)]
    '}'       réduction par utilisation de la règle 2 (affect)
    '}'       [réduction par utilisation de la règle 14 (expr)]
    ';'       réduction par utilisation de la règle 2 (affect)
    ';'       [réduction par utilisation de la règle 14 (expr)]
    $défaut  réduction par utilisation de la règle 14 (expr)


État 64

    3 affect: TYPE ID '=' '-' . NUMBER
   13 expr: '-' . NUMBER

    NUMBER  décalage et aller à l'état 85


État 65

    4 affect: TYPE ID '=' expr .
    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 4 (affect)


État 66

   21 list: "int" "main" '(' ')' . '{' list '}'

    '{'  décalage et aller à l'état 86


État 67

   22 list: list ';' tag statement .

    $défaut  réduction par utilisation de la règle 22 (list)


État 68

   10 expr: '(' expr ')' .

    $défaut  réduction par utilisation de la règle 10 (expr)


État 69

    6 expr: expr . '+' expr
    6     | expr '+' expr .
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr

    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 6 (expr)


État 70

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    7     | expr '-' expr .
    8     | expr . '*' expr
    9     | expr . '/' expr

    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 7 (expr)


État 71

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    8     | expr '*' expr .
    9     | expr . '/' expr

    $défaut  réduction par utilisation de la règle 8 (expr)


État 72

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
    9     | expr '/' expr .

    $défaut  réduction par utilisation de la règle 9 (expr)


État 73

   34 condition: '(' condition ')' .

    $défaut  réduction par utilisation de la règle 34 (condition)


État 74

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   37 relop: expr '>' expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 37 (relop)


État 75

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   38 relop: expr '<' expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 38 (relop)


État 76

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   40 relop: expr ">=" expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 40 (relop)


État 77

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   41 relop: expr "<=" expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 41 (relop)


État 78

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   42 relop: expr "==" expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 42 (relop)


État 79

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   39 relop: expr "!=" expr .

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 39 (relop)


État 80

   31 condition: condition OR tag . condition

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 87
    relop      aller à l'état 32


État 81

   32 condition: condition AND tag . condition

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 88
    relop      aller à l'état 32


État 82

   27 statement: IF '(' condition ')' '{' . tag list '}'
   28          | IF '(' condition ')' '{' . tag list '}' ELSE '{' tagoto list '}'

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 89


État 83

   29 statement: WHILE tag '(' condition ')' . '{' tag list '}'

    '{'  décalage et aller à l'état 90


État 84

   30 statement: FOR '(' affect ';' tag . condition ';' expr ')' '{' tag list '}'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 27
    NOT     décalage et aller à l'état 28
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 29

    expr       aller à l'état 30
    increment  aller à l'état 26
    condition  aller à l'état 91
    relop      aller à l'état 32


État 85

    3 affect: TYPE ID '=' '-' NUMBER .
   13 expr: '-' NUMBER .

    $end      réduction par utilisation de la règle 3 (affect)
    $end      [réduction par utilisation de la règle 13 (expr)]
    '}'       réduction par utilisation de la règle 3 (affect)
    '}'       [réduction par utilisation de la règle 13 (expr)]
    ';'       réduction par utilisation de la règle 3 (affect)
    ';'       [réduction par utilisation de la règle 13 (expr)]
    $défaut  réduction par utilisation de la règle 13 (expr)


État 86

   21 list: "int" "main" '(' ')' '{' . list '}'

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    affect     aller à l'état 8
    list       aller à l'état 92
    statement  aller à l'état 10


État 87

   31 condition: condition . OR tag condition
   31          | condition OR tag condition .
   32          | condition . AND tag condition

    AND  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 31 (condition)


État 88

   31 condition: condition . OR tag condition
   32          | condition . AND tag condition
   32          | condition AND tag condition .

    $défaut  réduction par utilisation de la règle 32 (condition)


État 89

   27 statement: IF '(' condition ')' '{' tag . list '}'
   28          | IF '(' condition ')' '{' tag . list '}' ELSE '{' tagoto list '}'

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    affect     aller à l'état 8
    list       aller à l'état 93
    statement  aller à l'état 10


État 90

   29 statement: WHILE tag '(' condition ')' '{' . tag list '}'

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 94


État 91

   30 statement: FOR '(' affect ';' tag condition . ';' expr ')' '{' tag list '}'
   31 condition: condition . OR tag condition
   32          | condition . AND tag condition

    OR   décalage et aller à l'état 58
    AND  décalage et aller à l'état 59
    ';'  décalage et aller à l'état 95


État 92

   21 list: "int" "main" '(' ')' '{' list . '}'
   22     | list . ';' tag statement
   23     | list . ';' affect

    '}'  décalage et aller à l'état 96
    ';'  décalage et aller à l'état 18


État 93

   22 list: list . ';' tag statement
   23     | list . ';' affect
   27 statement: IF '(' condition ')' '{' tag list . '}'
   28          | IF '(' condition ')' '{' tag list . '}' ELSE '{' tagoto list '}'

    '}'  décalage et aller à l'état 97
    ';'  décalage et aller à l'état 18


État 94

   29 statement: WHILE tag '(' condition ')' '{' tag . list '}'

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    affect     aller à l'état 8
    list       aller à l'état 98
    statement  aller à l'état 10


État 95

   30 statement: FOR '(' affect ';' tag condition ';' . expr ')' '{' tag list '}'

    NUMBER  décalage et aller à l'état 19
    ID      décalage et aller à l'état 20
    '-'     décalage et aller à l'état 21
    "++"    décalage et aller à l'état 22
    "--"    décalage et aller à l'état 23
    '('     décalage et aller à l'état 24

    expr       aller à l'état 99
    increment  aller à l'état 26


État 96

   21 list: "int" "main" '(' ')' '{' list '}' .

    $défaut  réduction par utilisation de la règle 21 (list)


État 97

   27 statement: IF '(' condition ')' '{' tag list '}' .
   28          | IF '(' condition ')' '{' tag list '}' . ELSE '{' tagoto list '}'

    ELSE  décalage et aller à l'état 100

    $défaut  réduction par utilisation de la règle 27 (statement)


État 98

   22 list: list . ';' tag statement
   23     | list . ';' affect
   29 statement: WHILE tag '(' condition ')' '{' tag list . '}'

    '}'  décalage et aller à l'état 101
    ';'  décalage et aller à l'état 18


État 99

    6 expr: expr . '+' expr
    7     | expr . '-' expr
    8     | expr . '*' expr
    9     | expr . '/' expr
   30 statement: FOR '(' affect ';' tag condition ';' expr . ')' '{' tag list '}'

    '+'  décalage et aller à l'état 45
    '-'  décalage et aller à l'état 46
    '*'  décalage et aller à l'état 47
    '/'  décalage et aller à l'état 48
    ')'  décalage et aller à l'état 102


État 100

   28 statement: IF '(' condition ')' '{' tag list '}' ELSE . '{' tagoto list '}'

    '{'  décalage et aller à l'état 103


État 101

   29 statement: WHILE tag '(' condition ')' '{' tag list '}' .

    $défaut  réduction par utilisation de la règle 29 (statement)


État 102

   30 statement: FOR '(' affect ';' tag condition ';' expr ')' . '{' tag list '}'

    '{'  décalage et aller à l'état 104


État 103

   28 statement: IF '(' condition ')' '{' tag list '}' ELSE '{' . tagoto list '}'

    $défaut  réduction par utilisation de la règle 20 (tagoto)

    tagoto  aller à l'état 105


État 104

   30 statement: FOR '(' affect ';' tag condition ';' expr ')' '{' . tag list '}'

    $défaut  réduction par utilisation de la règle 19 (tag)

    tag  aller à l'état 106


État 105

   28 statement: IF '(' condition ')' '{' tag list '}' ELSE '{' tagoto . list '}'

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    affect     aller à l'état 8
    list       aller à l'état 107
    statement  aller à l'état 10


État 106

   30 statement: FOR '(' affect ';' tag condition ';' expr ')' '{' tag . list '}'

    ID     décalage et aller à l'état 1
    IF     décalage et aller à l'état 2
    WHILE  décalage et aller à l'état 3
    FOR    décalage et aller à l'état 4
    TYPE   décalage et aller à l'état 5
    "int"  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 26 (list)

    affect     aller à l'état 8
    list       aller à l'état 108
    statement  aller à l'état 10


État 107

   22 list: list . ';' tag statement
   23     | list . ';' affect
   28 statement: IF '(' condition ')' '{' tag list '}' ELSE '{' tagoto list . '}'

    '}'  décalage et aller à l'état 109
    ';'  décalage et aller à l'état 18


État 108

   22 list: list . ';' tag statement
   23     | list . ';' affect
   30 statement: FOR '(' affect ';' tag condition ';' expr ')' '{' tag list . '}'

    '}'  décalage et aller à l'état 110
    ';'  décalage et aller à l'état 18


État 109

   28 statement: IF '(' condition ')' '{' tag list '}' ELSE '{' tagoto list '}' .

    $défaut  réduction par utilisation de la règle 28 (statement)


État 110

   30 statement: FOR '(' affect ';' tag condition ';' expr ')' '{' tag list '}' .

    $défaut  réduction par utilisation de la règle 30 (statement)
